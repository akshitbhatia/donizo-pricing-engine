version: '3.8'

services:
  # PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: donizo
      POSTGRES_USER: donizo_user
      POSTGRES_PASSWORD: donizo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U donizo_user -d donizo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Smart Semantic Pricing Engine
  pricing-engine:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://donizo_user:donizo_password@postgres:5432/donizo
      - REDIS_URL=redis://redis:6379
      - DEBUG=False
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database initialization service
  init-db:
    build: .
    command: python scripts/init_db.py
    environment:
      - DATABASE_URL=postgresql://donizo_user:donizo_password@postgres:5432/donizo
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
  redis_data:
